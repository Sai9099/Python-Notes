1.Print out the first n rows of Pascal's triangle
def pascal_triangle(n):
    trow = [1]
    y = [0]
  
    for x in range(max(n, 0)):
        print(trow)
      
        trow = [l + r for l, r in zip(trow + y, y + trow)]
    return n >= 1
pascal_triangle(6)


2.Check whether a string is a pangram or not

import string
import sys
def ispangram(str1, alphabet=string.ascii_lowercase):
    alphaset = set(alphabet)
    
    str_set = set(str1.lower())
    
    return alphaset <= str_set

print(ispangram('The quick brown fox jumps over the lazy dog')) 


3.Accept a hyphen-separated sequence of words as input and prints the sorted words

items = [n for n in input().split('-')]
items.sort()
print('-'.join(items))


4.Generate and print a list where the values are square of numbers between two numbers

def printValues():
    l = list()
    
    for i in range(1, 21):
        l.append(i**2)
    
    print(l)

printValues() 


5.Execute a string containing Python code

mycode = 'print("hello world")'

code = """
def mutiply(x,y):
    return x*y

print('Multiply of 2 and 3 is: ',mutiply(2,3))
"""

exec(mycode)
exec(code) 

6.Access a function inside a function

def test(a):
    def add(b):
        nonlocal a
        a += 1
        return a + b
    
    return add

func = test(4)
print(func(4)) 

7.Detect the number of local variables declared in a function
def abc():
    x = 1
    y = 2
    str1 = "webworld"
    
    print("Python Exercises")

print(abc.__code__.co_nlocals) 

8.Invoke a given function after specific milliseconds

from time import sleep
import math
def delay(fn, ms, *args):
    sleep(ms / 1000)
    
    return fn(*args)

print("Square root after specific milliseconds:") 

print(delay(lambda x: math.sqrt(x), 100, 16))

print(delay(lambda x: math.sqrt(x), 1000, 100))

print(delay(lambda x: math.sqrt(x), 2000, 25100))