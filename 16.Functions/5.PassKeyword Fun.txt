Python pass Statement
----------------------
The Python pass statement is a null statement. But the difference between pass and comment is that comment is ignored by the interpreter whereas pass is not ignored. 

eg:

a = 10
b = 20
if(a<b):
  pass
else:
  print("b<a")

eg:

li =['a', 'b', 'c', 'd']
for i in li:
    if(i =='a'):
        pass
    else:
        print(i)



Differences Between Pass and Continue and break in Python
---------------------------------------------------------
Pass: The pass statement in Python is used when a statement or a condition is required to be present in the program, but we don’t want any command or code to execute. It’s typically used as a placeholder for future code.

Continue: The continue statement in Python is used to skip the remaining code inside a loop for the current iteration only

Break: A break statement in Python alters the flow of a loop by terminating it once a specified condition is met.
eg:

for num in range(0,5):
    pass
    print(f'Iteration: {num}')
    print("This statement is after 'pass'")
    continue
    print("This statement is after 'continue'")

eg:

number_of_iterations = int(input("How many iterations you want ? \n "))

for iteration_count in range(1,1000):
    print(f"\nInteration: {iteration_count}")
    print("\nThis is line before 'pass'")
    pass
    print("\nThis is line after 'pass'")
    
    if iteration_count < number_of_iterations:
        print("\nThis is line before 'continue'")
        continue
        print("\nThis is line after 'continue'")
    print("\nThis is line after condition check for 'continue'")
    
    if iteration_count < number_of_iterations+1:
        print("\nThis is line before 'break'")
        break
        print("\nThis is line after 'break'")
    print("\nThis is line after condition check for 'break'")

