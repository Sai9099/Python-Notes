1.single return statement
def add(a, b):
    return a + b
def is_true(a):
    return bool(a)
# calling function
res = add(2, 3)
print("Result of add function is {}".format(res))
res = is_true(2<5)
print("\nResult of is_true function is {}".format(res))

2.This function returns a tuple 
def fun(): 
    str = "hellopython"
    x = 20
    return str, x;   
str, x = fun() 
print(str) 
print(x) 

3.This function returns a list 
def fun(): 
    str = "hello python"
    x = 20   
    return [str, x];   
list = fun()  
print(list) 

4.This function returns a dict 
def fun(): 
    d = dict();  
    d['str'] = "GeeksforGeeks"
    d['x']   = 20
    return d 
d = fun()  
print(d) 
---------------
def check_number(num):
    if num > 0:
        return "Positive"
    elif num < 0:
        return "Negative"
    return "Zero"  # This return statement is reached only if num is 0

print(check_number(5))   # Output: Positive
print(check_number(-3))  # Output: Negative
print(check_number(0))   # Output: Zero
--------------------------------
4.Find the Max of three numbers

def max_of_two(x, y):
    if x > y:
        return x
    return y
def max_of_three(x, y, z):
    return max_of_two(x, max_of_two(y, z))
print(max_of_three(3, 6, -5)) 


5.Find the sum of all the numbers in a list

def sum(numbers):
    total = 0
 
    for x in numbers:
        total += x
    return total
print(sum((8, 2, 3, 0, 7)))


6.Multiply all the numbers in a list

def multiply(numbers):
    total = 1
    
    for x in numbers:
        total *= x
    
    return total

print(multiply((8, 2, 3, -1, 7)))

7.Reverse a string

def string_reverse(str1):
    rstr1 = ''
    
    index = len(str1)
    
    while index > 0:
        rstr1 += str1[index - 1]
        
        index = index - 1
    
    return rstr1

print(string_reverse('1234abcd')) 

8.Calculate the factorial of a number

def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

n = int(input("Input a number to compute the factorial: "))

print(factorial(n))

9.Check whether a number falls in a given range

def test_range(n):
    if n in range(3, 9):
        print("%s is in the range" % str(n))
    else:
        print("The number is outside the given range.")

test_range(5) 

10.Calculate the number of upper / lower case letters in a string

def string_test(s):
    d = {"UPPER_CASE": 0, "LOWER_CASE": 0}
    
    for c in s:
        if c.isupper():
            d["UPPER_CASE"] += 1
        elif c.islower():
            d["LOWER_CASE"] += 1
        else:
            pass
    
    print("Original String: ", s)
    
    print("No. of Upper case characters: ", d["UPPER_CASE"])
    
    print("No. of Lower case Characters: ", d["LOWER_CASE"])

string_test('The quick Brown Fox')

11. Unique elements from a list

def unique_list(l):
    x = []
      for a in l:
        if a not in x:
            x.append(a)
      return x
print(unique_list([1, 2, 3, 3, 3, 3, 4, 5]))  


12.Test the number is prime or not

def test_prime(n):
    if (n == 1):
        return False
    elif (n == 2):
        return True
    else:
        for x in range(2, n):
            if (n % x == 0):
                return False
        return True
print(test_prime(9))

13.Print the even numbers from a given list
def is_even_num(l):
    enum = []
    
    for n in l:
        if n % 2 == 0:
            # If 'n' is even, append it to the 'enum' list
            enum.append(n)
      return enum
print(is_even_num([1, 2, 3, 4, 5, 6, 7, 8, 9])) 

14.Check whether a number is perfect or not

def perfect_number(n):
    sum = 0
    for x in range(1, n):
        if n % x == 0:
            sum += x
    return sum == n
    
print(perfect_number(12))

15.Checks whether a passed string is palindrome or not

def isPalindrome(string):
    left_pos = 0
    right_pos = len(string) - 1
    
    while right_pos >= left_pos:
        if not string[left_pos] == string[right_pos]:
            return False
        
        left_pos += 1
        right_pos -= 1
    
    return True

print(isPalindrome('aza'))

