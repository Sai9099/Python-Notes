Sort (ascending and descending) a dictionary by value
-----------------------------------------------------
import operator
d = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
print('Original dictionary : ',d)

sorted_d = sorted(d.items(), key=operator.itemgetter(1))

print('Dictionary in ascending order by value : ',sorted_d)

sorted_d = dict( sorted(d.items(), key=operator.itemgetter(1), reverse=True))

print('Dictionary in descending order by value : ',sorted_d)


Add a key to a dictionary
-------------------------
d = {0: 10, 1: 20}
print(d)
d.update({2: 30})
print(d) 


Concatenate following dictionaries to create a new one
------------------------------------------------------
dic1 = {1: 10, 2: 20}
dic2 = {3: 30, 4: 40}
dic3 = {5: 50, 6: 60}

dic4 = {}

for d in (dic1, dic2, dic3):
    dic4.update(d)

print(dic4) 


Check whether a given key already exists in a dictionary
--------------------------------------------------------
d = {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}

def is_key_present(x):
    if x in d:
        print('Key is present in the dictionary')
    else:
        print('Key is not present in the dictionary')
is_key_present(5)
is_key_present(9)
--
def key_in_dict(d, key):
    return (key in d)
students = {
    'Theodore': 19,
    'Roxanne': 22,
    'Mathew': 21,
    'Betty': 20
}

print("\nOriginal dictionary elements:")

print(students)

print(key_in_dict(students, 'Roxanne'))

print(key_in_dict(students, 'Gina'))
 
Iterate over dictionaries using for loops
-----------------------------------------
d = {'x': 10, 'y': 20, 'z': 30} 

for dict_key, dict_value in d.items():
    print(dict_key, '->', dict_value)	


Generate and print a dictionary that contains a number in the form (x, x*x)
----------------------------------------------------------------------
n = int(input("Input a number "))
d = dict()
for x in range(1, n + 1):
    d[x] = x * x
print(d)   


Print a dictionary where the keys are numbers between 1 and 15 and the values are square of keys
-----------------------------------------------------------------------
d = dict()
for x in range(1, 16):
    d[x] = x ** 2

print(d)

Merge two Python dictionaries
-----------------------------
def merge_dictionaries(*dicts):
    result = dict()

    for d in dicts:
        result.update(d)

    return result

students1 = {
    'Theodore': 10,
    'Mathew': 11,
}

students2 = {
    'Roxanne': 9
}

print("Original dictionaries:")

print(students1)
print(students2)

print("\nMerge dictionaries:")
print(merge_dictionaries(students1, students2))

Iterate over dictionaries using for loops
-----------------------------------------
d = {'Red': 1, 'Green': 2, 'Blue': 3}

for color_key, value in d.items():
    print(color_key, 'corresponds to ', d[color_key]) 


Sum all the items in a dictionary
---------------------------------
my_dict = {'data1': 100, 'data2': -54, 'data3': 247}
result = sum(my_dict.values())
print(result)


Multiply all the items in a dictionary
--------------------------------------
my_dict = {'data1': 100, 'data2': -54, 'data3': 247}
result = 1
for key in my_dict:
    result = result * my_dict[key]
print(result)    


Remove a key from a dictionary
------------------------------
myDict = {'a': 1, 'b': 2, 'c': 3, 'd': 4}
print(myDict)
if 'a' in myDict:
    del myDict['a']
print(myDict)


Map two lists into a dictionary
-------------------------------
keys = ['red', 'green', 'blue']

values = ['#FF0000', '#008000', '#0000FF']

color_dictionary = dict(zip(keys, values))

print(color_dictionary)


Sort a dictionary by key
------------------------
color_dict = {
    'red': '#FF0000',
    'green': '#008000',
    'black': '#000000',
    'white': '#FFFFFF'
}

for key in sorted(color_dict):
    print("%s: %s" % (key, color_dict[key]))
--
def sort_dict_by_key(d, reverse = False):
    return dict(sorted(d.items(), reverse=reverse))

students = { 'name1': 'Theodore', 'name2': 'Mathew', 'name4': 'Roxanne', 'name3': 'David' }

print("Original dictionary:")

print(students)

print("\nSort the said dictionary by key (Ascending order):")

print(sort_dict_by_key(students))

print("\nSort the said dictionary by key (Descending order):")

print(sort_dict_by_key(students, True))


Get the maximum and minimum value in a dictionary
--------------------------------------------------
my_dict = {'x': 500, 'y': 5874, 'z': 560}

key_max = max(my_dict.keys(), key=(lambda k: my_dict[k]))

key_min = min(my_dict.keys(), key=(lambda k: my_dict[k]))

print('Maximum Value: ', my_dict[key_max])

print('Minimum Value: ', my_dict[key_min])


Get a dictionary from an object's fields
----------------------------------------
class dictObj(object):
    def __init__(self):
        # Initialize attributes 'x', 'y', and 'z' with string values.
        self.x = 'red'
        self.y = 'Yellow'
        self.z = 'Green'
    
    def do_nothing(self):
        pass

test = dictObj()
print(test.__dict__)


Remove duplicates from Dictionary
----------------------------------
student_data = {
    'id1': {
        'name': ['Sara'],
        'class': ['V'],
        'subject_integration': ['english, math, science']
    },
    'id2': {
        'name': ['David'],
        'class': ['V'],
        'subject_integration': ['english, math, science']
    },
    'id3': {
        'name': ['Sara'],
        'class': ['V'],
        'subject_integration': ['english, math, science']
    },
    'id4': {
        'name': ['Surya'],
        'class': ['V'],
        'subject_integration': ['english, math, science']
    }
}

result = {}

for key, value in student_data.items():
    if value not in result.values():
        result[key] = value
print(result) 

Check a dictionary is empty or not
-----------------------------------
my_dict = {}

if not bool(my_dict):
    print("Dictionary is empty")


Combine two dictionary adding values for common keys
----------------------------------------------------
from collections import Counter

d1 = {'a': 100, 'b': 200, 'c': 300}
d2 = {'a': 300, 'b': 200, 'd': 400}

d = Counter(d1) + Counter(d2)
print(d)  


Create and display all combinations of letters, selecting each letter from a different key in a dictionary
--------------------------------------------------------------------------
import itertools
d = {'1': ['a', 'b'], '2': ['c', 'd']}
for combo in itertools.product(*[d[k] for k in sorted(d.keys())]):
    print(''.join(combo))


Find the highest 3 values of corresponding keys in a dictionary
---------------------------------------------------------------
from heapq import nlargest
my_dict = {'a': 500, 'b': 5874, 'c': 560, 'd': 400, 'e': 5874, 'f': 20}
three_largest = nlargest(3, my_dict, key=my_dict.get)
print(three_largest)

Combine values in python list of dictionaries
---------------------------------------------
from collections import Counter
item_list = [{'item': 'item1', 'amount': 400}, {'item': 'item2', 'amount': 300}, {'item': 'item1', 'amount': 750}]
result = Counter()
for d in item_list:
    result[d['item']] += d['amount']
print(result)


Create a dictionary from a string
----------------------------------
from collections import defaultdict, Counter
str1 = 'w3resource'
my_dict = {}
for letter in str1:
    my_dict[letter] = my_dict.get(letter, 0) + 1
print(my_dict) 


Print a dictionary in table format
-----------------------------------
my_dict = {'C1': [1, 2, 3], 'C2': [5, 6, 7], 'C3': [9, 10, 11]}

for row in zip(*([key] + (value) for key, value in sorted(my_dict.items()))):
    print(*row)

Count the values associated with key in a dictionary
----------------------------------------------------
student = [{'id': 1, 'success': True, 'name': 'Lary'},
 {'id': 2, 'success': False, 'name': 'Rabi'},
 {'id': 3, 'success': True, 'name': 'Alex'}]
print(sum(d['id'] for d in student))
print(sum(d['success'] for d in student))


Convert a list into a nested dictionary of keys
-----------------------------------------------
num_list = [1, 2, 3, 4]

new_dict = current = {}

for name in num_list:
    current[name] = {}
    
    current = current[name]
print(new_dict)